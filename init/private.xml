<?xml version="1.0"?>
<!-- Karabiner Custom Settings File -->
<!-- ln -sf $HOME/.dotfiles/init/private.xml $HOME/Library/Application\ Support/Karabiner/private.xml -->

<root>
    <item>
        <name>Custom Settings</name>
        <item>
            <name>Chrome Tab Switching</name>
            <item>
                <name>Option+Tab to Control+Tab</name>
                <appendix>Switches to the next tab.</appendix>
                <identifier>0x6A6F73657068.optionTab2controlTab</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
                    KeyCode::TAB, ModifierFlag::CONTROL_L
                </autogen>
            </item>
            <item>
                <name>Option+Backquote(`) to Control+Shift+Tab</name>
                <appendix>Switches to the previous tab.</appendix>
                <identifier>0x6A6F73657068.optionBackquote2controlShiftTab</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::BACKQUOTE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
                    KeyCode::TAB, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L
                </autogen>
            </item>
        </item>
        <item>
            <name>Happy Hacking Keyboard</name>
            <item>
                <!-- Must come before escape2hyper -->
                <name>Command+Escape to Command+Backquote(`)</name>
                <appendix>Go backwards in the Application Switcher like you still had a backquote key.</appendix>
                <identifier>0x6A6F73657068.commandEscape2commandBackquote</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::ESCAPE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
                    KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L
                </autogen>
            </item>
            <item>
                <name>Option+Escape to Control+Shift+Tab</name>
                <appendix>Switches to the previous tab when there's no backquote key.</appendix>
                <appendix>Use with "Option+Tab to Control+Tab".</appendix>
                <identifier>0x6A6F73657068.optionEscape2controlShiftTab</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::ESCAPE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
                    KeyCode::TAB, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L
                </autogen>
            </item>
            <item>
                <!-- Must come before escape2hyper -->
                <name>Shift+Escape to Tilde(~)</name>
                <identifier>0x6A6F73657068.shiftEscape2tilde</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::ESCAPE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
                    KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
                </autogen>
            </item>
        </item>

        <item>
            <name>Hyper</name>
            <item>
                <name>Escape to Hyper</name>
                <appendix>Tap to send Escape</appendix>
                <appendix>Hold to send custom Hyper key</appendix>
                <identifier>0x6A6F73657068.escape2hyper</identifier>
                <autogen>
                    --KeyOverlaidModifier--
                    KeyCode::ESCAPE,
                    KeyCode::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                    KeyCode::ESCAPE
                </autogen>
            </item>
            <item>
                <name>Command_R to Hyper</name>
                <appendix>Maps Command_R to custom Hyper key</appendix>
                <identifier>0x6A6F73657068.commandR2hyper</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::COMMAND_R,
                    KeyCode::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
                </autogen>
            </item>
            <item>
                <name>Hyper+D to Show Desktop</name>
                <identifier>0x6A6F73657068.hyperD2showDesktop</identifier>
                <autogen>
                    __KeyToKey__
                    KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                    KeyCode::MISSION_CONTROL, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND
                </autogen>
            </item>
        </item>
    </item>
</root>
